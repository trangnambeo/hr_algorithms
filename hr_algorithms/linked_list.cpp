///////////////////////////////////////////////////////////////////////////////
// COPYRIGHT 2017
// Nam Ly, Pullman, WA
//
// Implement a linked list
///////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"
#include "linked_list.h"

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
linked_list::linked_list():m_start_ptr(nullptr),m_end_ptr(nullptr)
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
linked_list::~linked_list()
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
void linked_list<DataType>::insert_begin(DataType)
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
void linked_list<DataType>::insert_end(DataType)
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
void linked_list<DataType>::delete_begin()
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
void linked_list<DataType>::delete_end()
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
void linked_list<DataType>::delete_all()
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
void linked_list<DataType>::size()
{
}

///////////////////////////////////////////////////////////////////////////////
template<class DataType>
bool linked_list<DataType>::is_empty()
{
	return false;
}
